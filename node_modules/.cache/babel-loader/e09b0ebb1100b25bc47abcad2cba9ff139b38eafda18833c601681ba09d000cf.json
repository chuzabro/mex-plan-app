{"ast":null,"code":"var _jsxFileName = \"/home/didar/Desktop/test app/mex-plan-app/src/pages/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/products.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch movies from the API\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(\"https://imdb236.p.rapidapi.com/imdb/lowest-rated-movies\", {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"YOUR_API_KEY\",\n            // Replace with your actual API key\n            \"X-RapidAPI-Host\": \"imdb236.p.rapidapi.com\"\n          }\n        });\n        const data = await response.json();\n        console.log(data); // Log the response to inspect its structure\n        setMovies(data.results || []); // Use a fallback if `results` is undefined\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"products-title\",\n      children: \"Our Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster_path ? `https://imdb236.p.rapidapi.com/imdb/lowest-rated-movies${movie.poster_path}` : \"https://imdb236.p.rapidapi.com/imdb/lowest-rated-movies\",\n          alt: movie.title,\n          className: \"product-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"product-name\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"product-description\",\n          children: [movie.overview.substring(0, 100), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Products, \"72fwlr08e18pammocXupWZZTEwc=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Products","_s","movies","setMovies","loading","setLoading","fetchMovies","response","fetch","method","headers","data","json","console","log","results","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","alt","title","overview","substring","id","_c","$RefreshReg$"],"sources":["/home/didar/Desktop/test app/mex-plan-app/src/pages/Products.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles/products.css\";\n\nconst Products = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch movies from the API\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(\"https://imdb236.p.rapidapi.com/imdb/lowest-rated-movies\", {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"YOUR_API_KEY\", // Replace with your actual API key\n            \"X-RapidAPI-Host\": \"imdb236.p.rapidapi.com\",\n          },\n        });\n        const data = await response.json();\n        console.log(data); // Log the response to inspect its structure\n        setMovies(data.results || []); // Use a fallback if `results` is undefined\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"products-page\">\n      <h1 className=\"products-title\">Our Products</h1>\n      <div className=\"products-grid\">\n        {movies.map((movie) => (\n          <div className=\"product-card\" key={movie.id}>\n            <img\n              src={movie.poster_path ? `https://imdb236.p.rapidapi.com/imdb/lowest-rated-movies${movie.poster_path}` : \"https://imdb236.p.rapidapi.com/imdb/lowest-rated-movies\"}\n              alt={movie.title}\n              className=\"product-image\"\n            />\n            <h2 className=\"product-name\">{movie.title}</h2>\n            <p className=\"product-description\">{movie.overview.substring(0, 100)}...</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Products;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}